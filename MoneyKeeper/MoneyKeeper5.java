/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Color;
import java.awt.Dimension;

import javax.swing.*;;


/**
 *
 * @author triun
 */
public class MoneyKeeper5 extends JFrame {

    /**
     * Creates new form MoneyKeeper5
     */
    public MoneyKeeper5() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private DefaultListModel listModel;
    private JList list;
    private static final String addString = "Add";
    private static final String removeString = "Remove";
    
    
    @SuppressWarnings({ "unchecked", "rawtypes" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        menuPanel = new JPanel();
        jButton1 = new JButton();
        jButton2 = new JButton();
        jButton3 = new JButton();
        jButton4 = new JButton();
        jButton5 = new JButton();
        parentPanel = new JPanel();
        icPanel = new JPanel();
        income = new JLabel();
        incomeAmount = new JTextField();
        IncomeType = new JLabel();
        IncomeTypes = new JComboBox<>();
        addIncome = new JButton();
        sumIncome = new JButton();
        incomeStatus = new JScrollPane();
        
       // incomes = new JTextArea();
       // incomes.setEnabled(false);
       // incomes.setText("new text");
       // incomes.append("\nnew string");
        
        /*
        listModel = new DefaultListModel();
        listModel.addElement("Mars");
        listModel.addElement("Jupiter");
        listModel.addElement("Venus");
        list = new JList(listModel);
        list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        list.setSelectedIndex(0);
       // list.addListSelectionListener(this);
        list.setVisibleRowCount(5);
        JScrollPane listScrollPane = new JScrollPane(list);
        icPanel.add(listScrollPane);
        */
        
        
        JButton tempPanel = new JButton();
        tempPanel.setPreferredSize(new Dimension(200, 100));
        tempPanel.setForeground(Color.black);
        icPanel.add(tempPanel);
        
        exPanel = new JPanel();
        expense = new JLabel();
        expenseAmount = new JTextField();

        
       
        expenseType = new JLabel();
        expenseTypes = new JComboBox<>();
        addExpense = new JButton();
        sumExpense = new JButton();
        expenseStatus = new JScrollPane();
        expenses = new JTextArea();
        ivPanel = new JPanel();
        invest = new JLabel();
        investAmount = new JTextField();
        InvestType = new JLabel();
        InvestTypes = new JComboBox<>();
        addInvest = new JButton();
        sumInvest = new JButton();
        investStatus = new JScrollPane();
        invests = new JTextArea();
        SuggestInvest = new JButton();
        sdPanel = new JPanel();
        debt = new JLabel();
        debtAmount = new JTextField();
        schoolType = new JLabel();
        schoolTypes = new JComboBox<>();
        addDebt = new JButton();
        sumDebt = new JButton();
        debtStatus = new JScrollPane();
        debts = new JTextArea();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        menuPanel.setBackground(new java.awt.Color(153, 255, 153));

        jButton1.setText("Income");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Expense");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Help");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Investment");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Student Debt");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        GroupLayout menuPanelLayout = new GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(menuPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        getContentPane().add(menuPanel, java.awt.BorderLayout.PAGE_START);

        parentPanel.setBackground(new java.awt.Color(102, 255, 204));
        parentPanel.setLayout(new java.awt.CardLayout());

        icPanel.setBackground(new java.awt.Color(102, 102, 255));

        income.setText("Income (No comma): ");

        incomeAmount.setToolTipText("");

        IncomeType.setText("Income Types: ");

        IncomeTypes.setModel(new DefaultComboBoxModel<>(new String[] { "Primary Job", "Secondary Job", "Side Job", "Hobby", "Other" }));

        addIncome.setText("Add Income");

        sumIncome.setText("Sum Incomes");
        sumIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumIncomeActionPerformed(evt);
            }
        });

       // incomes.setColumns(20);
       // incomes.setRows(5);
       // incomeStatus.setViewportView(incomes);

        GroupLayout icPanelLayout = new GroupLayout(icPanel);
        icPanel.setLayout(icPanelLayout);
        icPanelLayout.setHorizontalGroup(
            icPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(icPanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(icPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(addIncome)
                    .addGroup(icPanelLayout.createSequentialGroup()
                        .addComponent(IncomeType)
                        .addGap(18, 18, 18)
                        .addComponent(IncomeTypes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addComponent(sumIncome)
                    .addGroup(icPanelLayout.createSequentialGroup()
                        .addComponent(income)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(incomeAmount, GroupLayout.PREFERRED_SIZE, 114, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(incomeStatus, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        icPanelLayout.setVerticalGroup(
            icPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(icPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(icPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(incomeStatus)
                    .addGroup(icPanelLayout.createSequentialGroup()
                        .addGroup(icPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(incomeAmount, GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                            .addComponent(income, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(icPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(IncomeType, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(IncomeTypes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(addIncome)
                        .addGap(26, 26, 26)
                        .addComponent(sumIncome)))
                .addGap(82, 82, 82))
        );
        

        parentPanel.add(icPanel, "card2");

        exPanel.setBackground(new java.awt.Color(204, 102, 255));

        expense.setText("Expense (No comma):");

        expenseAmount.setToolTipText("");

        expenseType.setText("Expense Type: ");

        expenseTypes.setModel(new DefaultComboBoxModel<>(new String[] { "Rent", "Gas", "Insurance", "Food", "Utilities", "Entertainment", "Other" }));

        addExpense.setText("Add Expense");

        sumExpense.setText("Sum Expenses");

        expenses.setColumns(20);
        expenses.setRows(5);
        expenseStatus.setViewportView(expenses);

        GroupLayout exPanelLayout = new GroupLayout(exPanel);
        exPanel.setLayout(exPanelLayout);
        exPanelLayout.setHorizontalGroup(
            exPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(exPanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(exPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(addExpense)
                    .addGroup(exPanelLayout.createSequentialGroup()
                        .addComponent(expenseType)
                        .addGap(18, 18, 18)
                        .addComponent(expenseTypes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(exPanelLayout.createSequentialGroup()
                        .addComponent(expense)
                        .addGap(18, 18, 18)
                        .addComponent(expenseAmount, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
                    .addComponent(sumExpense))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(expenseStatus, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        
        exPanelLayout.setVerticalGroup(
            exPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(exPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(exPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(expenseStatus)
                    .addGroup(exPanelLayout.createSequentialGroup()
                        .addGroup(exPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(expenseAmount, GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                            .addComponent(expense, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(exPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(expenseType, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(expenseTypes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(addExpense)
                        .addGap(26, 26, 26)
                        .addComponent(sumExpense)))
                .addGap(73, 73, 73))
        );

        parentPanel.add(exPanel, "card3");

        ivPanel.setBackground(new java.awt.Color(255, 102, 102));

        invest.setText("Investment (No comma): ");

        investAmount.setToolTipText("");

        InvestType.setText("Investment Type: ");

        InvestTypes.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addInvest.setText("Add Investment");

        sumInvest.setText("Sum Investment");

        invests.setColumns(20);
        invests.setRows(5);
        investStatus.setViewportView(invests);

        SuggestInvest.setText("Suggested Investment");

        GroupLayout ivPanelLayout = new GroupLayout(ivPanel);
        ivPanel.setLayout(ivPanelLayout);
        ivPanelLayout.setHorizontalGroup(
            ivPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(ivPanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(ivPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(addInvest)
                    .addGroup(ivPanelLayout.createSequentialGroup()
                        .addComponent(InvestType)
                        .addGap(18, 18, 18)
                        .addComponent(InvestTypes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(ivPanelLayout.createSequentialGroup()
                        .addComponent(invest)
                        .addGap(18, 18, 18)
                        .addComponent(investAmount, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
                    .addComponent(sumInvest)
                    .addComponent(SuggestInvest))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(investStatus, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ivPanelLayout.setVerticalGroup(
            ivPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(ivPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(ivPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(ivPanelLayout.createSequentialGroup()
                        .addGroup(ivPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(investAmount, GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                            .addComponent(invest, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(ivPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(InvestType, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(InvestTypes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(addInvest)
                        .addGap(26, 26, 26)
                        .addComponent(sumInvest)
                        .addGap(18, 18, 18)
                        .addComponent(SuggestInvest)
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ivPanelLayout.createSequentialGroup()
                        .addComponent(investStatus, GroupLayout.PREFERRED_SIZE, 220, GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        parentPanel.add(ivPanel, "card4");

        sdPanel.setBackground(new java.awt.Color(0, 153, 153));

        debt.setText("Debt (No comma): ");

        debtAmount.setToolTipText("");

        schoolType.setText("School: ");

        schoolTypes.setModel(new DefaultComboBoxModel<>(new String[] { "Primary", "Middle", "High", "Undergraduate", "Graduate" }));

        addDebt.setText("Add Debt");

        sumDebt.setText("Sum Debt");

        debts.setColumns(20);
        debts.setRows(5);
        debtStatus.setViewportView(debts);

        GroupLayout sdPanelLayout = new GroupLayout(sdPanel);
        sdPanel.setLayout(sdPanelLayout);
        sdPanelLayout.setHorizontalGroup(
            sdPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(sdPanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(sdPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(addDebt)
                    .addGroup(sdPanelLayout.createSequentialGroup()
                        .addComponent(schoolType)
                        .addGap(18, 18, 18)
                        .addComponent(schoolTypes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(sdPanelLayout.createSequentialGroup()
                        .addComponent(debt)
                        .addGap(18, 18, 18)
                        .addComponent(debtAmount, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
                    .addComponent(sumDebt))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(debtStatus, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        sdPanelLayout.setVerticalGroup(
            sdPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(sdPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(sdPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(debtStatus)
                    .addGroup(sdPanelLayout.createSequentialGroup()
                        .addGroup(sdPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(debtAmount, GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                            .addComponent(debt, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(sdPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(schoolType, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(schoolTypes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(addDebt)
                        .addGap(26, 26, 26)
                        .addComponent(sumDebt)))
                .addGap(62, 62, 62))
        );

        parentPanel.add(sdPanel, "card5");

        getContentPane().add(parentPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        parentPanel.removeAll();
        parentPanel.add(icPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        parentPanel.removeAll();
        parentPanel.add(exPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        parentPanel.removeAll();
        parentPanel.add(ivPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }                                        

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        parentPanel.removeAll();
        parentPanel.add(sdPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }                                        

    private void sumIncomeActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoneyKeeper5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoneyKeeper5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoneyKeeper5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoneyKeeper5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MoneyKeeper5().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private JLabel IncomeType;
    private JComboBox<String> IncomeTypes;
    private JLabel InvestType;
    private JComboBox<String> InvestTypes;
    private JButton SuggestInvest;
    private JButton addDebt;
    private JButton addExpense;
    private JButton addIncome;
    private JButton addInvest;
    private JLabel debt;
    private JTextField debtAmount;
    private JScrollPane debtStatus;
    private JTextArea debts;
    private JPanel exPanel;
    private JLabel expense;
    private JTextField expenseAmount;
    private JScrollPane expenseStatus;
    private JLabel expenseType;
    private JComboBox<String> expenseTypes;
    private JTextArea expenses;
    private JPanel icPanel;
    private JLabel income;
    private JTextField incomeAmount;
    private JScrollPane incomeStatus;
    private JTextArea incomes;
    private JLabel invest;
    private JTextField investAmount;
    private JScrollPane investStatus;
    private JTextArea invests;
    private JPanel ivPanel;
    private JButton jButton1;
    private JButton jButton2;
    private JButton jButton3;
    private JButton jButton4;
    private JButton jButton5;
    private JPanel menuPanel;
    private JPanel parentPanel;
    private JLabel schoolType;
    private JComboBox<String> schoolTypes;
    private JPanel sdPanel;
    private JButton sumDebt;
    private JButton sumExpense;
    private JButton sumIncome;
    private JButton sumInvest;
    // End of variables declaration                   
}
